# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.environment: dev
    app.debug: true
    pusher.app_id: '%env(PUSHER_APP_ID)%'
    pusher.app_key: '%env(PUSHER_APP_KEY)%'
    pusher.app_secret: '%env(PUSHER_APP_SECRET)%'
    pusher.app_cluster: '%env(PUSHER_APP_CLUSTER)%'
services:
    # config/services.yaml
    App\Security\UserProvider:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'
        tags:
            - { name: 'security.user_provider' }

    App\Services\MailerService:
        arguments:
            $fromAddress: '%env(MAILER_FROM)%'
    App\Services\NotificationManager:
        arguments:
            $appId: '%pusher.app_id%'
            $appKey: '%pusher.app_key%'
            $appSecret: '%pusher.app_secret%'
            $cluster: '%pusher.app_cluster%'
    App\Service\Toolkit: ~
    # App\Service\CardPressoMicroService: ~
    App\Service\GenericEntityManager: ~
    # App\Services\MicroServiceDgtt:
    #     arguments:
    #         $apiKey: '%env(DGTT_API_KEY)%'
    App\EventSubscriber\JWTEventExceptionListenerSubscriber:
        tags:
            - { name: 'kernel.event_subscriber' }
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

